version: '3'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - elastic
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    ports:
      - "5601:5601"
    networks:
      - elastic
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - mongo
  mongo:
    image: "mongo:latest"
    ports:
      - "27017:27017"
    command: /usr/bin/mongod --bind_ip_all --replSet rs0 --dbpath /data/db 
    volumes:
      - mongodb-data:/data/
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30  
    networks:
      - elastic
volumes:
  mongodb-data:
networks:
  elastic:
    driver: bridge